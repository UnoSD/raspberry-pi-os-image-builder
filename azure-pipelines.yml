trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
- group: Home
- name: packer_version
  value: 1.6.6
- name: packer_arm_builder_version
  value: 0.1.6

parameters:
- name: wpa_supplicant_path
  default: $(WpaSupplicant.secureFilePath)
- name: username
  default: $(username)
- name: ip
  default: $(ip)
- name: subnet
  default: $(subnet)
- name: router
  default: $(router)
- name: ssh_public_key_path
  default: $(PublicKey.secureFilePath)
- name: hostname
  default: $(hostname)
- name: image_url
  default:
- name: image_checksum
  default:
        
steps:
- task: DownloadSecureFile@1
  name: PublicKey
  displayName: Download public key
  inputs:
    secureFile: id_rsa.pub

- task: DownloadSecureFile@1
  name: WpaSupplicant
  displayName: Download wpa_supplicant.conf
  inputs:
    secureFile: wpa_supplicant.conf

- script: echo -n "{" > variables.json
  displayName: Open brackets in Packer variables file
- ${{ each parameter in parameters }}:
  - script: |
      echo -n "\"${{ parameter.Key }}\": $(echo -n '${{ parameter.Value }}' | jq -Rsa .)," >> variables.json
    displayName: Setting ${{ parameter.Key }} in Packer variables file
- script: |
    truncate -s -1 variables.json
    echo "}" >> variables.json
  displayName: Close brackets in Packer variables file

- script: |
    if [ -z "$(jq .image_url test.json -r)" ]; then
        IMAGE=$(curl 'https://downloads.raspberrypi.org/raspios_lite_armhf/images/' | grep 'href="raspios_lite_armhf-' | cut -d'"' -f8 | sort | tail -n1)
        IMAGE_NAME=$(curl "https://downloads.raspberrypi.org/raspios_lite_armhf/images/$IMAGE" | grep '.img.xz"' | cut -d'"' -f8)
        IMAGE_URL="https://downloads.raspberrypi.org/raspios_lite_armhf/images/$IMAGE/$IMAGE_NAME"
        IMAGE_SHA256="sha256:$(curl "https://downloads.raspberrypi.org/raspios_lite_armhf/images/$IMAGE/${IMAGE_NAME}.sha256" | cut -d' ' -f1)"
    
        jq ".image_url = \"$IMAGE_URL\" | .image_checksum = \"$IMAGE_SHA256\"" variables.json > temp.json && mv temp.json variables.json
    fi
  displayName: Set lastest image

- script: |
    sudo apt-get -qq -o=Dpkg::Use-Pty=0 install -y qemu-user-static git wget zip unzip build-essential kpartx qemu binfmt-support e2fsprogs dosfstools
    
    wget -q https://releases.hashicorp.com/packer/${{ variables.packer_version }}/packer_${{ variables.packer_version }}_linux_amd64.zip

    unzip -qq packer_${{ variables.packer_version }}_linux_amd64.zip

    wget -q https://github.com/solo-io/packer-builder-arm-image/releases/download/v${{ variables.packer_arm_builder_version }}/packer-builder-arm-image

    chmod +x packer-builder-arm-image
    
    sudo ./packer build -var-file=variables.json packer.json
    
    zip -r image.zip output-arm-image/image
    
    # Zip seems to be faster with roughly the same size
    #xz -cv0 output-arm-image/image > image.xz
  displayName: Build image
  failOnStdErr: true
# Presumably the Packer version supported by the
# arm builder does not support PKR_VAR_* for setting 
# variables; add this back when we can upgrade Packer.
#  env:
#    ${{ each parameter in parameters }}:
#      PKR_VAR_${{ parameter.Key }}: ${{ parameter.Value }}

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: $(System.DefaultWorkingDirectory)/image.zip
    publishLocation: pipeline